function p = add_device(p,dev_type,dev_interface,dev_circuit,dev_samprate)
% function p = add_device(p,dev_type,dev_interface,dev_circuit,dev_samprate)
%
% Add a device to presenter object <p>. This function serves as a wrapper
% to all the connection, circuit loading, etc calls to TDT. Examples:
%
% p = presenter;
% p = add_device(p,'ZBUS','GB');
% p = add_device(p,'RP2','GB','simple_tone.rcx',50000);


% later functions will use dev_samprate so make sure it's defined
if nargin<5
    dev_samprate = [];
end

if ~isfield(p.devices,dev_type) % this is the first device of this type to be added
    dev_number = 1;
else
    dev_number = length(getfield(p.devices,dev_type)) + 1;
end

switch dev_type
    case {'ZBUS'} % add the zBus device
        dev = actxcontrol('zBUS.x');
        success = invoke(dev,'ConnectZBUS',dev_interface);
        if ~success
            error(sprintf('Error connecting to ZBUS via %s',dev_interface));
        end
    case {'PA5'} % trying to add a pa5
        dev = actxcontrol('PA5.x');
        success = invoke(dev,'ConnectPA5',dev_interface,dev_number);
        if ~success
            error(sprintf('Error connecting to PA5 num %d via %s',dev_number,dev_interface));
        end
    case {'RP2' 'RX6' 'RM2' 'RA16' 'RV8'} % any RPCo.x device
        % define the activeX controller
        dev = actxcontrol('RPCo.x');
        % connect to the device
        if ~invoke(dev,['Connect' dev_type],dev_interface,dev_number);
            error(sprintf('Error connecting to %s num %d via %s',dev_type,dev_number,dev_interface));
        end
        % load a circuit (set the samprate if it was given as argument)
        if isempty(dev_samprate)
            success = invoke(dev,'LoadCOF',dev_circuit);
        else
            % let users enter a real sampling rate; translate to TDT lingo
            switch round(dev_samprate)
                case 6000
                    tdt_fs = 0;
                case 12000
                    tdt_fs = 1;
                case 25000
                    tdt_fs = 2;
                case 50000
                    tdt_fs = 3;
                case 100000 
                    tdt_fs = 4;
                case 200000
                    tdt_fs = 5;
                otherwise
                    error('Choose a sampling rate from 6000, 12000, 25000, 50000, 100000, or 200000 Hz');
            end
            success = invoke(dev,'LoadCOFsf',dev_circuit,tdt_fs);
        end
        if ~success
            error(sprintf('Error loading circuit %s to %s num %d',dev_circuit,dev_type,dev_number));
        end
        % start the device
        if ~invoke(dev,'Run');
            error(sprintf('Error starting %s num %d',dev_type,dev_number));
        end
        % add the samprate, circuit file, and par tag names to the object
        samprate = invoke(dev,'GetSFreq');
        numtags = invoke(dev,'GetNumOf','ParTag');
        mytags = {};
        for itag = 1:numtags
            mytags{itag} = invoke(dev,'GetNameOf','ParTag',itag);
        end

        % add device-specific info to the presenter object slots
        p.samprate.(dev_type)(dev_number) = samprate;
        p.circuit_files.(dev_type){dev_number} = dev_circuit;
        p.partags.(dev_type){dev_number} = mytags;
end

%  add the device to the presenter object
p.devices.(dev_type)(dev_number) = dev;

% keep track of the commands necessary to load this object
p.add_commands{end+1} = {dev_type dev_interface dev_circuit dev_samprate};



